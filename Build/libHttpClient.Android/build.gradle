if (!project.ext."libhc_common_android_config_applied") {
    throw new GradleException("Expected common configuration not applied")
}

apply plugin: "com.android.library"

android {
    compileOptions {
        sourceCompatibility=JavaVersion.VERSION_1_7
        targetCompatibility=JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt")
        }
    }

    externalNativeBuild {
        cmake {
            path "../../Utilities/CMake/Android/libHttpClient/CMakeLists.txt"
        }
    }

    // To build static libs, we generate a dummy .so - but we don't actually want to package it.
    packagingOptions {
        exclude "**/*.so"
    }

    // We want to copy the built Java `.aar` binary to sit next to the built native `.a` binaries.
    libraryVariants.all { variant ->
        def variantFlavor = variant.getFlavorName()
        def variantAbi = "unknown"
        if (variantFlavor == "arm7") {
            variantAbi = "armeabi-v7a"
        } else if (variantFlavor == "arm64") {
            variantAbi = "arm64-v8a"
        } else if (variantFlavor == "x86") {
            variantAbi = "x86"
        } else if (variantFlavor == "x86_64") {
            variantAbi = "x86_64"
        }

        variant.outputs.each { output ->
            output.outputFileName = "../../../../../Binaries/Android/${variantAbi}/${variant.getBuildType().getName()}/libHttpClient.aar"
        }
    }
}

dependencies {
    implementation "com.squareup.okhttp3:okhttp:3.10.0"
}
